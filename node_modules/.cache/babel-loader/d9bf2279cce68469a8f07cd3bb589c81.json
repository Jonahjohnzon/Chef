{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Declaration = require('../declaration');\n\nvar _require = require('./grid-utils'),\n    prefixTrackProp = _require.prefixTrackProp,\n    prefixTrackValue = _require.prefixTrackValue,\n    autoplaceGridItems = _require.autoplaceGridItems,\n    getGridGap = _require.getGridGap,\n    inheritGridGap = _require.inheritGridGap;\n\nvar Processor = require('../processor');\n\nvar GridRowsColumns = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridRowsColumns, _Declaration);\n\n  var _super = _createSuper(GridRowsColumns);\n\n  function GridRowsColumns() {\n    _classCallCheck(this, GridRowsColumns);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridRowsColumns, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change property name for IE\n     */\n    function prefixed(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefixTrackProp({\n          prop: prop,\n          prefix: prefix\n        });\n      }\n\n      return _get(_getPrototypeOf(GridRowsColumns.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Change IE property back\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridRowsColumns.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var parent = decl.parent,\n          prop = decl.prop,\n          value = decl.value;\n      var isRowProp = prop.includes('rows');\n      var isColumnProp = prop.includes('columns');\n      var hasGridTemplate = parent.some(function (i) {\n        return i.prop === 'grid-template' || i.prop === 'grid-template-areas';\n      });\n      /**\n       * Not to prefix rows declaration if grid-template(-areas) is present\n       */\n\n      if (hasGridTemplate && isRowProp) {\n        return false;\n      }\n\n      var processor = new Processor({\n        options: {}\n      });\n      var status = processor.gridStatus(parent, result);\n      var gap = getGridGap(decl);\n      gap = inheritGridGap(decl, gap) || gap;\n      var gapValue = isRowProp ? gap.row : gap.column;\n\n      if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n        gapValue = null;\n      }\n\n      var prefixValue = prefixTrackValue({\n        value: value,\n        gap: gapValue\n      });\n      /**\n       * Insert prefixes\n       */\n\n      decl.cloneBefore({\n        prop: prefixTrackProp({\n          prop: prop,\n          prefix: prefix\n        }),\n        value: prefixValue\n      });\n      var autoflow = parent.nodes.find(function (i) {\n        return i.prop === 'grid-auto-flow';\n      });\n      var autoflowValue = 'row';\n\n      if (autoflow && !processor.disabled(autoflow, result)) {\n        autoflowValue = autoflow.value.trim();\n      }\n\n      if (status === 'autoplace') {\n        /**\n         * Show warning if grid-template-rows decl is not found\n         */\n        var rowDecl = parent.nodes.find(function (i) {\n          return i.prop === 'grid-template-rows';\n        });\n\n        if (!rowDecl && hasGridTemplate) {\n          return undefined;\n        } else if (!rowDecl && !hasGridTemplate) {\n          decl.warn(result, 'Autoplacement does not work without grid-template-rows property');\n          return undefined;\n        }\n        /**\n         * Show warning if grid-template-columns decl is not found\n         */\n\n\n        var columnDecl = parent.nodes.find(function (i) {\n          return i.prop === 'grid-template-columns';\n        });\n\n        if (!columnDecl && !hasGridTemplate) {\n          decl.warn(result, 'Autoplacement does not work without grid-template-columns property');\n        }\n        /**\n         * Autoplace grid items\n         */\n\n\n        if (isColumnProp && !hasGridTemplate) {\n          autoplaceGridItems(decl, result, gap, autoflowValue);\n        }\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return GridRowsColumns;\n}(Declaration);\n\nGridRowsColumns.names = ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns'];\nmodule.exports = GridRowsColumns;","map":{"version":3,"sources":["C:/Users/nasni/Desktop/Illumino/illumino/node_modules/autoprefixer/lib/hacks/grid-rows-columns.js"],"names":["Declaration","require","prefixTrackProp","prefixTrackValue","autoplaceGridItems","getGridGap","inheritGridGap","Processor","GridRowsColumns","prop","prefix","replace","decl","prefixes","result","parent","value","isRowProp","includes","isColumnProp","hasGridTemplate","some","i","processor","options","status","gridStatus","gap","gapValue","row","column","prefixValue","cloneBefore","autoflow","nodes","find","autoflowValue","disabled","trim","rowDecl","undefined","warn","columnDecl","names","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,eAMIA,OAAO,CAAC,cAAD,CANX;AAAA,IACEC,eADF,YACEA,eADF;AAAA,IAEEC,gBAFF,YAEEA,gBAFF;AAAA,IAGEC,kBAHF,YAGEA,kBAHF;AAAA,IAIEC,UAJF,YAIEA,UAJF;AAAA,IAKEC,cALF,YAKEA,cALF;;AAOA,IAAIC,SAAS,GAAGN,OAAO,CAAC,cAAD,CAAvB;;IAEMO,e;;;;;;;;;;;;;;;;AACJ;AACF;AACA;AACE,sBAASC,IAAT,EAAeC,MAAf,EAAuB;AACrB,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACrB,eAAOR,eAAe,CAAC;AAAEO,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,MAAM,EAANA;AAAR,SAAD,CAAtB;AACD;;AACD,2FAAsBD,IAAtB,EAA4BC,MAA5B;AACD;AAED;AACF;AACA;;;;WACE,mBAAUD,IAAV,EAAgB;AACd,aAAOA,IAAI,CAACE,OAAL,CAAa,sBAAb,EAAqC,kBAArC,CAAP;AACD;;;WAED,gBAAOC,IAAP,EAAaF,MAAb,EAAqBG,QAArB,EAA+BC,MAA/B,EAAuC;AACrC,UAAIJ,MAAM,KAAK,MAAf,EAAuB,mFAAoBE,IAApB,EAA0BF,MAA1B,EAAkCG,QAAlC;AAEvB,UAAME,MAAN,GAA8BH,IAA9B,CAAMG,MAAN;AAAA,UAAcN,IAAd,GAA8BG,IAA9B,CAAcH,IAAd;AAAA,UAAoBO,KAApB,GAA8BJ,IAA9B,CAAoBI,KAApB;AACA,UAAIC,SAAS,GAAGR,IAAI,CAACS,QAAL,CAAc,MAAd,CAAhB;AACA,UAAIC,YAAY,GAAGV,IAAI,CAACS,QAAL,CAAc,SAAd,CAAnB;AAEA,UAAIE,eAAe,GAAGL,MAAM,CAACM,IAAP,CACpB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACb,IAAF,KAAW,eAAX,IAA8Ba,CAAC,CAACb,IAAF,KAAW,qBAA7C;AAAA,OADmB,CAAtB;AAIA;AACJ;AACA;;AACI,UAAIW,eAAe,IAAIH,SAAvB,EAAkC;AAChC,eAAO,KAAP;AACD;;AAED,UAAIM,SAAS,GAAG,IAAIhB,SAAJ,CAAc;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAhB;AACA,UAAIC,MAAM,GAAGF,SAAS,CAACG,UAAV,CAAqBX,MAArB,EAA6BD,MAA7B,CAAb;AACA,UAAIa,GAAG,GAAGtB,UAAU,CAACO,IAAD,CAApB;AACAe,MAAAA,GAAG,GAAGrB,cAAc,CAACM,IAAD,EAAOe,GAAP,CAAd,IAA6BA,GAAnC;AAEA,UAAIC,QAAQ,GAAGX,SAAS,GAAGU,GAAG,CAACE,GAAP,GAAaF,GAAG,CAACG,MAAzC;;AAEA,UAAI,CAACL,MAAM,KAAK,cAAX,IAA6BA,MAAM,KAAK,IAAzC,KAAkD,CAACL,eAAvD,EAAwE;AACtEQ,QAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,UAAIG,WAAW,GAAG5B,gBAAgB,CAAC;AACjCa,QAAAA,KAAK,EAALA,KADiC;AAEjCW,QAAAA,GAAG,EAAEC;AAF4B,OAAD,CAAlC;AAKA;AACJ;AACA;;AACIhB,MAAAA,IAAI,CAACoB,WAAL,CAAiB;AACfvB,QAAAA,IAAI,EAAEP,eAAe,CAAC;AAAEO,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,MAAM,EAANA;AAAR,SAAD,CADN;AAEfM,QAAAA,KAAK,EAAEe;AAFQ,OAAjB;AAKA,UAAIE,QAAQ,GAAGlB,MAAM,CAACmB,KAAP,CAAaC,IAAb,CAAkB,UAAAb,CAAC;AAAA,eAAIA,CAAC,CAACb,IAAF,KAAW,gBAAf;AAAA,OAAnB,CAAf;AACA,UAAI2B,aAAa,GAAG,KAApB;;AAEA,UAAIH,QAAQ,IAAI,CAACV,SAAS,CAACc,QAAV,CAAmBJ,QAAnB,EAA6BnB,MAA7B,CAAjB,EAAuD;AACrDsB,QAAAA,aAAa,GAAGH,QAAQ,CAACjB,KAAT,CAAesB,IAAf,EAAhB;AACD;;AACD,UAAIb,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACN;AACA;AACM,YAAIc,OAAO,GAAGxB,MAAM,CAACmB,KAAP,CAAaC,IAAb,CAAkB,UAAAb,CAAC;AAAA,iBAAIA,CAAC,CAACb,IAAF,KAAW,oBAAf;AAAA,SAAnB,CAAd;;AAEA,YAAI,CAAC8B,OAAD,IAAYnB,eAAhB,EAAiC;AAC/B,iBAAOoB,SAAP;AACD,SAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACnB,eAAjB,EAAkC;AACvCR,UAAAA,IAAI,CAAC6B,IAAL,CACE3B,MADF,EAEE,iEAFF;AAIA,iBAAO0B,SAAP;AACD;AAED;AACN;AACA;;;AACM,YAAIE,UAAU,GAAG3B,MAAM,CAACmB,KAAP,CAAaC,IAAb,CAAkB,UAAAb,CAAC,EAAI;AACtC,iBAAOA,CAAC,CAACb,IAAF,KAAW,uBAAlB;AACD,SAFgB,CAAjB;;AAGA,YAAI,CAACiC,UAAD,IAAe,CAACtB,eAApB,EAAqC;AACnCR,UAAAA,IAAI,CAAC6B,IAAL,CACE3B,MADF,EAEE,oEAFF;AAID;AAED;AACN;AACA;;;AACM,YAAIK,YAAY,IAAI,CAACC,eAArB,EAAsC;AACpChB,UAAAA,kBAAkB,CAACQ,IAAD,EAAOE,MAAP,EAAea,GAAf,EAAoBS,aAApB,CAAlB;AACD;AACF;;AAED,aAAOI,SAAP;AACD;;;;EAxG2BxC,W;;AA2G9BQ,eAAe,CAACmC,KAAhB,GAAwB,CACtB,oBADsB,EAEtB,uBAFsB,EAGtB,WAHsB,EAItB,cAJsB,CAAxB;AAOAC,MAAM,CAACC,OAAP,GAAiBrC,eAAjB","sourcesContent":["let Declaration = require('../declaration')\nlet {\n  prefixTrackProp,\n  prefixTrackValue,\n  autoplaceGridItems,\n  getGridGap,\n  inheritGridGap\n} = require('./grid-utils')\nlet Processor = require('../processor')\n\nclass GridRowsColumns extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return prefixTrackProp({ prop, prefix })\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize(prop) {\n    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')\n  }\n\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let { parent, prop, value } = decl\n    let isRowProp = prop.includes('rows')\n    let isColumnProp = prop.includes('columns')\n\n    let hasGridTemplate = parent.some(\n      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n    )\n\n    /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */\n    if (hasGridTemplate && isRowProp) {\n      return false\n    }\n\n    let processor = new Processor({ options: {} })\n    let status = processor.gridStatus(parent, result)\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    let gapValue = isRowProp ? gap.row : gap.column\n\n    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n      gapValue = null\n    }\n\n    let prefixValue = prefixTrackValue({\n      value,\n      gap: gapValue\n    })\n\n    /**\n     * Insert prefixes\n     */\n    decl.cloneBefore({\n      prop: prefixTrackProp({ prop, prefix }),\n      value: prefixValue\n    })\n\n    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')\n    let autoflowValue = 'row'\n\n    if (autoflow && !processor.disabled(autoflow, result)) {\n      autoflowValue = autoflow.value.trim()\n    }\n    if (status === 'autoplace') {\n      /**\n       * Show warning if grid-template-rows decl is not found\n       */\n      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n\n      if (!rowDecl && hasGridTemplate) {\n        return undefined\n      } else if (!rowDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-rows property'\n        )\n        return undefined\n      }\n\n      /**\n       * Show warning if grid-template-columns decl is not found\n       */\n      let columnDecl = parent.nodes.find(i => {\n        return i.prop === 'grid-template-columns'\n      })\n      if (!columnDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-columns property'\n        )\n      }\n\n      /**\n       * Autoplace grid items\n       */\n      if (isColumnProp && !hasGridTemplate) {\n        autoplaceGridItems(decl, result, gap, autoflowValue)\n      }\n    }\n\n    return undefined\n  }\n}\n\nGridRowsColumns.names = [\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-rows',\n  'grid-columns'\n]\n\nmodule.exports = GridRowsColumns\n"]},"metadata":{},"sourceType":"script"}