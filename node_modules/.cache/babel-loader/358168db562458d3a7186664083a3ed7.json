{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar flexSpec = require('./flex-spec');\n\nvar Declaration = require('../declaration');\n\nvar AlignSelf = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(AlignSelf, _Declaration);\n\n  var _super = _createSuper(AlignSelf);\n\n  function AlignSelf() {\n    _classCallCheck(this, AlignSelf);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AlignSelf, [{\n    key: \"check\",\n    value: function check(decl) {\n      return decl.parent && !decl.parent.some(function (i) {\n        return i.prop && i.prop.startsWith('grid-');\n      });\n    }\n    /**\n     * Change property name for 2012 specs\n     */\n\n  }, {\n    key: \"prefixed\",\n    value: function prefixed(prop, prefix) {\n      var spec;\n\n      var _flexSpec = flexSpec(prefix);\n\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n\n      if (spec === 2012) {\n        return prefix + 'flex-item-align';\n      }\n\n      return _get(_getPrototypeOf(AlignSelf.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return 'align-self';\n    }\n    /**\n     * Change value for 2012 spec and ignore prefix for 2009\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      var spec = flexSpec(prefix)[0];\n\n      if (spec === 2012) {\n        decl.value = AlignSelf.oldValues[decl.value] || decl.value;\n        return _get(_getPrototypeOf(AlignSelf.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      if (spec === 'final') {\n        return _get(_getPrototypeOf(AlignSelf.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return AlignSelf;\n}(Declaration);\n\nAlignSelf.names = ['align-self', 'flex-item-align'];\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n};\nmodule.exports = AlignSelf;","map":{"version":3,"sources":["C:/Users/nasni/Desktop/Illumino/illumino/node_modules/autoprefixer/lib/hacks/align-self.js"],"names":["flexSpec","require","Declaration","AlignSelf","decl","parent","some","i","prop","startsWith","prefix","spec","value","oldValues","undefined","names","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;IAEME,S;;;;;;;;;;;;;;;WACJ,eAAMC,IAAN,EAAY;AACV,aACEA,IAAI,CAACC,MAAL,IACA,CAACD,IAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiB,UAAAC,CAAC,EAAI;AACrB,eAAOA,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkB,OAAlB,CAAjB;AACD,OAFA,CAFH;AAMD;AAED;AACF;AACA;;;;WACE,kBAASD,IAAT,EAAeE,MAAf,EAAuB;AACrB,UAAIC,IAAJ;;AADqB,sBAEHX,QAAQ,CAACU,MAAD,CAFL;;AAAA;;AAEnBC,MAAAA,IAFmB;AAEbD,MAAAA,MAFa;;AAGrB,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAOD,MAAM,GAAG,iBAAhB;AACD;;AACD,qFAAsBF,IAAtB,EAA4BE,MAA5B;AACD;AAED;AACF;AACA;;;;WACE,qBAAY;AACV,aAAO,YAAP;AACD;AAED;AACF;AACA;;;;WACE,aAAIN,IAAJ,EAAUM,MAAV,EAAkB;AAChB,UAAIC,IAAI,GAAGX,QAAQ,CAACU,MAAD,CAAR,CAAiB,CAAjB,CAAX;;AACA,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjBP,QAAAA,IAAI,CAACQ,KAAL,GAAaT,SAAS,CAACU,SAAV,CAAoBT,IAAI,CAACQ,KAAzB,KAAmCR,IAAI,CAACQ,KAArD;AACA,kFAAiBR,IAAjB,EAAuBM,MAAvB;AACD;;AACD,UAAIC,IAAI,KAAK,OAAb,EAAsB;AACpB,kFAAiBP,IAAjB,EAAuBM,MAAvB;AACD;;AACD,aAAOI,SAAP;AACD;;;;EA1CqBZ,W;;AA6CxBC,SAAS,CAACY,KAAV,GAAkB,CAAC,YAAD,EAAe,iBAAf,CAAlB;AAEAZ,SAAS,CAACU,SAAV,GAAsB;AACpB,cAAY,KADQ;AAEpB,gBAAc;AAFM,CAAtB;AAKAG,MAAM,CAACC,OAAP,GAAiBd,SAAjB","sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return (\n      decl.parent &&\n      !decl.parent.some(i => {\n        return i.prop && i.prop.startsWith('grid-')\n      })\n    )\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-item-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignSelf.names = ['align-self', 'flex-item-align']\n\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignSelf\n"]},"metadata":{},"sourceType":"script"}