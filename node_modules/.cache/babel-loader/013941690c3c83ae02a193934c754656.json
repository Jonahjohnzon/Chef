{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar list = require('postcss').list;\n\nvar flexSpec = require('./flex-spec');\n\nvar Declaration = require('../declaration');\n\nvar Flex = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(Flex, _Declaration);\n\n  var _super = _createSuper(Flex);\n\n  function Flex() {\n    _classCallCheck(this, Flex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Flex, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change property name for 2009 spec\n     */\n    function prefixed(prop, prefix) {\n      var spec;\n\n      var _flexSpec = flexSpec(prefix);\n\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n\n      if (spec === 2009) {\n        return prefix + 'box-flex';\n      }\n\n      return _get(_getPrototypeOf(Flex.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      return 'flex';\n    }\n    /**\n     * Spec 2009 supports only first argument\n     * Spec 2012 disallows unitless basis\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      var spec = flexSpec(prefix)[0];\n\n      if (spec === 2009) {\n        decl.value = list.space(decl.value)[0];\n        decl.value = Flex.oldValues[decl.value] || decl.value;\n        return _get(_getPrototypeOf(Flex.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      if (spec === 2012) {\n        var components = list.space(decl.value);\n\n        if (components.length === 3 && components[2] === '0') {\n          decl.value = components.slice(0, 2).concat('0px').join(' ');\n        }\n      }\n\n      return _get(_getPrototypeOf(Flex.prototype), \"set\", this).call(this, decl, prefix);\n    }\n  }]);\n\n  return Flex;\n}(Declaration);\n\nFlex.names = ['flex', 'box-flex'];\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n};\nmodule.exports = Flex;","map":{"version":3,"sources":["C:/Users/nasni/Desktop/Illumino/illumino/node_modules/autoprefixer/lib/hacks/flex.js"],"names":["list","require","flexSpec","Declaration","Flex","prop","prefix","spec","decl","value","space","oldValues","components","length","slice","concat","join","names","auto","none","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,IAA9B;;AAEA,IAAIE,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;IAEMG,I;;;;;;;;;;;;;;;;AACJ;AACF;AACA;AACE,sBAASC,IAAT,EAAeC,MAAf,EAAuB;AACrB,UAAIC,IAAJ;;AADqB,sBAEHL,QAAQ,CAACI,MAAD,CAFL;;AAAA;;AAEnBC,MAAAA,IAFmB;AAEbD,MAAAA,MAFa;;AAGrB,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAOD,MAAM,GAAG,UAAhB;AACD;;AACD,gFAAsBD,IAAtB,EAA4BC,MAA5B;AACD;AAED;AACF;AACA;;;;WACE,qBAAY;AACV,aAAO,MAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,aAAIE,IAAJ,EAAUF,MAAV,EAAkB;AAChB,UAAIC,IAAI,GAAGL,QAAQ,CAACI,MAAD,CAAR,CAAiB,CAAjB,CAAX;;AACA,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjBC,QAAAA,IAAI,CAACC,KAAL,GAAaT,IAAI,CAACU,KAAL,CAAWF,IAAI,CAACC,KAAhB,EAAuB,CAAvB,CAAb;AACAD,QAAAA,IAAI,CAACC,KAAL,GAAaL,IAAI,CAACO,SAAL,CAAeH,IAAI,CAACC,KAApB,KAA8BD,IAAI,CAACC,KAAhD;AACA,6EAAiBD,IAAjB,EAAuBF,MAAvB;AACD;;AACD,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAIK,UAAU,GAAGZ,IAAI,CAACU,KAAL,CAAWF,IAAI,CAACC,KAAhB,CAAjB;;AACA,YAAIG,UAAU,CAACC,MAAX,KAAsB,CAAtB,IAA2BD,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAjD,EAAsD;AACpDJ,UAAAA,IAAI,CAACC,KAAL,GAAaG,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvB,CAA8B,KAA9B,EAAqCC,IAArC,CAA0C,GAA1C,CAAb;AACD;AACF;;AACD,2EAAiBR,IAAjB,EAAuBF,MAAvB;AACD;;;;EAtCgBH,W;;AAyCnBC,IAAI,CAACa,KAAL,GAAa,CAAC,MAAD,EAAS,UAAT,CAAb;AAEAb,IAAI,CAACO,SAAL,GAAiB;AACfO,EAAAA,IAAI,EAAE,GADS;AAEfC,EAAAA,IAAI,EAAE;AAFS,CAAjB;AAKAC,MAAM,CAACC,OAAP,GAAiBjB,IAAjB","sourcesContent":["let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n"]},"metadata":{},"sourceType":"script"}