{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar OldValue = require('../old-value');\n\nvar Value = require('../value');\n\nfunction _regexp(name) {\n  return new RegExp(\"(^|[\\\\s,(])(\".concat(name, \"($|[\\\\s),]))\"), 'gi');\n}\n\nvar Intrinsic = /*#__PURE__*/function (_Value) {\n  \"use strict\";\n\n  _inherits(Intrinsic, _Value);\n\n  var _super = _createSuper(Intrinsic);\n\n  function Intrinsic() {\n    _classCallCheck(this, Intrinsic);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Intrinsic, [{\n    key: \"regexp\",\n    value: function regexp() {\n      if (!this.regexpCache) this.regexpCache = _regexp(this.name);\n      return this.regexpCache;\n    }\n  }, {\n    key: \"isStretch\",\n    value: function isStretch() {\n      return this.name === 'stretch' || this.name === 'fill' || this.name === 'fill-available';\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(string, prefix) {\n      if (prefix === '-moz-' && this.isStretch()) {\n        return string.replace(this.regexp(), '$1-moz-available$3');\n      }\n\n      if (prefix === '-webkit-' && this.isStretch()) {\n        return string.replace(this.regexp(), '$1-webkit-fill-available$3');\n      }\n\n      return _get(_getPrototypeOf(Intrinsic.prototype), \"replace\", this).call(this, string, prefix);\n    }\n  }, {\n    key: \"old\",\n    value: function old(prefix) {\n      var prefixed = prefix + this.name;\n\n      if (this.isStretch()) {\n        if (prefix === '-moz-') {\n          prefixed = '-moz-available';\n        } else if (prefix === '-webkit-') {\n          prefixed = '-webkit-fill-available';\n        }\n      }\n\n      return new OldValue(this.name, prefixed, prefixed, _regexp(prefixed));\n    }\n  }, {\n    key: \"add\",\n    value: function add(decl, prefix) {\n      if (decl.prop.includes('grid') && prefix !== '-webkit-') {\n        return undefined;\n      }\n\n      return _get(_getPrototypeOf(Intrinsic.prototype), \"add\", this).call(this, decl, prefix);\n    }\n  }]);\n\n  return Intrinsic;\n}(Value);\n\nIntrinsic.names = ['max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'stretch'];\nmodule.exports = Intrinsic;","map":{"version":3,"sources":["C:/Users/nasni/Desktop/Illumino/illumino/node_modules/autoprefixer/lib/hacks/intrinsic.js"],"names":["OldValue","require","Value","regexp","name","RegExp","Intrinsic","regexpCache","string","prefix","isStretch","replace","prefixed","decl","prop","includes","undefined","names","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AAEA,SAASE,OAAT,CAAgBC,IAAhB,EAAsB;AACpB,SAAO,IAAIC,MAAJ,uBAA0BD,IAA1B,mBAA8C,IAA9C,CAAP;AACD;;IAEKE,S;;;;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAI,CAAC,KAAKC,WAAV,EAAuB,KAAKA,WAAL,GAAmBJ,OAAM,CAAC,KAAKC,IAAN,CAAzB;AACvB,aAAO,KAAKG,WAAZ;AACD;;;WAED,qBAAY;AACV,aACE,KAAKH,IAAL,KAAc,SAAd,IACA,KAAKA,IAAL,KAAc,MADd,IAEA,KAAKA,IAAL,KAAc,gBAHhB;AAKD;;;WAED,iBAAQI,MAAR,EAAgBC,MAAhB,EAAwB;AACtB,UAAIA,MAAM,KAAK,OAAX,IAAsB,KAAKC,SAAL,EAA1B,EAA4C;AAC1C,eAAOF,MAAM,CAACG,OAAP,CAAe,KAAKR,MAAL,EAAf,EAA8B,oBAA9B,CAAP;AACD;;AACD,UAAIM,MAAM,KAAK,UAAX,IAAyB,KAAKC,SAAL,EAA7B,EAA+C;AAC7C,eAAOF,MAAM,CAACG,OAAP,CAAe,KAAKR,MAAL,EAAf,EAA8B,4BAA9B,CAAP;AACD;;AACD,oFAAqBK,MAArB,EAA6BC,MAA7B;AACD;;;WAED,aAAIA,MAAJ,EAAY;AACV,UAAIG,QAAQ,GAAGH,MAAM,GAAG,KAAKL,IAA7B;;AACA,UAAI,KAAKM,SAAL,EAAJ,EAAsB;AACpB,YAAID,MAAM,KAAK,OAAf,EAAwB;AACtBG,UAAAA,QAAQ,GAAG,gBAAX;AACD,SAFD,MAEO,IAAIH,MAAM,KAAK,UAAf,EAA2B;AAChCG,UAAAA,QAAQ,GAAG,wBAAX;AACD;AACF;;AACD,aAAO,IAAIZ,QAAJ,CAAa,KAAKI,IAAlB,EAAwBQ,QAAxB,EAAkCA,QAAlC,EAA4CT,OAAM,CAACS,QAAD,CAAlD,CAAP;AACD;;;WAED,aAAIC,IAAJ,EAAUJ,MAAV,EAAkB;AAChB,UAAII,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,MAAnB,KAA8BN,MAAM,KAAK,UAA7C,EAAyD;AACvD,eAAOO,SAAP;AACD;;AACD,gFAAiBH,IAAjB,EAAuBJ,MAAvB;AACD;;;;EAzCqBP,K;;AA4CxBI,SAAS,CAACW,KAAV,GAAkB,CAChB,aADgB,EAEhB,aAFgB,EAGhB,aAHgB,EAIhB,MAJgB,EAKhB,gBALgB,EAMhB,SANgB,CAAlB;AASAC,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["let OldValue = require('../old-value')\nlet Value = require('../value')\n\nfunction regexp(name) {\n  return new RegExp(`(^|[\\\\s,(])(${name}($|[\\\\s),]))`, 'gi')\n}\n\nclass Intrinsic extends Value {\n  regexp() {\n    if (!this.regexpCache) this.regexpCache = regexp(this.name)\n    return this.regexpCache\n  }\n\n  isStretch() {\n    return (\n      this.name === 'stretch' ||\n      this.name === 'fill' ||\n      this.name === 'fill-available'\n    )\n  }\n\n  replace(string, prefix) {\n    if (prefix === '-moz-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-moz-available$3')\n    }\n    if (prefix === '-webkit-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-webkit-fill-available$3')\n    }\n    return super.replace(string, prefix)\n  }\n\n  old(prefix) {\n    let prefixed = prefix + this.name\n    if (this.isStretch()) {\n      if (prefix === '-moz-') {\n        prefixed = '-moz-available'\n      } else if (prefix === '-webkit-') {\n        prefixed = '-webkit-fill-available'\n      }\n    }\n    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))\n  }\n\n  add(decl, prefix) {\n    if (decl.prop.includes('grid') && prefix !== '-webkit-') {\n      return undefined\n    }\n    return super.add(decl, prefix)\n  }\n}\n\nIntrinsic.names = [\n  'max-content',\n  'min-content',\n  'fit-content',\n  'fill',\n  'fill-available',\n  'stretch'\n]\n\nmodule.exports = Intrinsic\n"]},"metadata":{},"sourceType":"script"}