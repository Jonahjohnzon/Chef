{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/nasni/Desktop/Illumino/illumino/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar flexSpec = require('./flex-spec');\n\nvar Declaration = require('../declaration');\n\nvar FlexBasis = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(FlexBasis, _Declaration);\n\n  var _super = _createSuper(FlexBasis);\n\n  function FlexBasis() {\n    _classCallCheck(this, FlexBasis);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FlexBasis, [{\n    key: \"normalize\",\n    value:\n    /**\n     * Return property name by final spec\n     */\n    function normalize() {\n      return 'flex-basis';\n    }\n    /**\n     * Return flex property for 2012 spec\n     */\n\n  }, {\n    key: \"prefixed\",\n    value: function prefixed(prop, prefix) {\n      var spec;\n\n      var _flexSpec = flexSpec(prefix);\n\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n\n      if (spec === 2012) {\n        return prefix + 'flex-preferred-size';\n      }\n\n      return _get(_getPrototypeOf(FlexBasis.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n    /**\n     * Ignore 2009 spec and use flex property for 2012\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      var spec;\n\n      var _flexSpec3 = flexSpec(prefix);\n\n      var _flexSpec4 = _slicedToArray(_flexSpec3, 2);\n\n      spec = _flexSpec4[0];\n      prefix = _flexSpec4[1];\n\n      if (spec === 2012 || spec === 'final') {\n        return _get(_getPrototypeOf(FlexBasis.prototype), \"set\", this).call(this, decl, prefix);\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return FlexBasis;\n}(Declaration);\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size'];\nmodule.exports = FlexBasis;","map":{"version":3,"sources":["C:/Users/nasni/Desktop/Illumino/illumino/node_modules/autoprefixer/lib/hacks/flex-basis.js"],"names":["flexSpec","require","Declaration","FlexBasis","prop","prefix","spec","decl","undefined","names","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;IAEME,S;;;;;;;;;;;;;;;;AACJ;AACF;AACA;AACE,yBAAY;AACV,aAAO,YAAP;AACD;AAED;AACF;AACA;;;;WACE,kBAASC,IAAT,EAAeC,MAAf,EAAuB;AACrB,UAAIC,IAAJ;;AADqB,sBAEHN,QAAQ,CAACK,MAAD,CAFL;;AAAA;;AAEnBC,MAAAA,IAFmB;AAEbD,MAAAA,MAFa;;AAGrB,UAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAOD,MAAM,GAAG,qBAAhB;AACD;;AACD,qFAAsBD,IAAtB,EAA4BC,MAA5B;AACD;AAED;AACF;AACA;;;;WACE,aAAIE,IAAJ,EAAUF,MAAV,EAAkB;AAChB,UAAIC,IAAJ;;AADgB,uBAEEN,QAAQ,CAACK,MAAD,CAFV;;AAAA;;AAEdC,MAAAA,IAFc;AAERD,MAAAA,MAFQ;;AAGhB,UAAIC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,OAA9B,EAAuC;AACrC,kFAAiBC,IAAjB,EAAuBF,MAAvB;AACD;;AACD,aAAOG,SAAP;AACD;;;;EA9BqBN,W;;AAiCxBC,SAAS,CAACM,KAAV,GAAkB,CAAC,YAAD,EAAe,qBAAf,CAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBR,SAAjB","sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size']\n\nmodule.exports = FlexBasis\n"]},"metadata":{},"sourceType":"script"}